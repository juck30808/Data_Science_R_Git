#####===== (A1).整合開發分析平台 (RStudio)--分成四區: =====#####
#-- (A)程式編輯區 (左上區)
#-- (B)指令執行區(左下區): 請用Shift-Dn指令標記7-9行後，用Ctrl-Enter將這三行送到指令執行區執行
x = 1:10
x               #-- (C)變量顯示區(右上角): 可以看到 x 變量:  #-- [1]  1  2  3  4  5  6  7  8  9 10
#####===== (A1).整合開發分析平台 (RStudio)--分成四區: =====#####
x = 1:10
x               #-- (C)變量顯示區(右上角): 可以看到 x 變量:  #-- [1]  1  2  3  4  5  6  7  8  9 10
plot(x,x*x)     #-- (D)繪圖與求助區(右下角): 可以看到 x 對 x*x 的繪圖
plot(x,x*x)     #-- (D)繪圖與求助區(右下角): 可以看到 x 對 x*x 的繪圖
#####===== (A2).數據分析程式語言 (R)  =====#####
3+2
X = 3+2
X
Y = X+5
Y
#####===== (A2).數據分析程式語言 (R)  =====#####
X = 3+2
Y = X+5
x,y
#####===== (A2).數據分析程式語言 (R)  =====#####
X = 3+2
Y = X+5
X,Y
Y
#== (1)RStudio環境中，可以同時開啟多個程式
# -- 每個程式，隨時保持儲存
# -- 讓每個程式，只要從第一行開始重新執行，即可獲得同樣的結果
# -- 每一計畫 (project) 存於一目錄
#== (2) 井字號# 代表註解(comment): 其後的指令(敘述)不執行，可分為檔首註解，段落註解，行尾註解
# -- 編程檔 (.R) 的註解：有三種--
#   -- (A) 檔首註解：註明整個程式的 (1)程式名稱、(2)程式目的、(*)調用方式、(3)作者，(4)日期
#   -- (B) 分段註解：指示數據分析的步驟(請參考數據分析步驟說明) ，五個井號(#####)可有段落收縮
#   -- (C) 行尾註解：在適當的地方，註解此行說明，或 執行結果 (通常 加 #-- 識別)
#== (3) 在R中，大小寫是不同的，試輸入 x 與 X，觀察他們的值
x   #-- [1]  1  2  3  4  5  6  7  8  9 10
X   #-- [1]  5
#== (4) 一行中可以有多個指令，以分號;分隔，如 第15,17行可以寫成
X = 3+2;
Y = X+5
#####===== (B1).數據擷取 (KDD1, read.csv) =====#####
X = read.csv("XXX2.csv")
X
#####===== (B1).數據擷取 (KDD1, read.csv) =====#####
X = read.csv("XXX2.csv")
X
#####===== (B2).數據框的架構 (KDD2, dim, head): 以下二指令是檢視數據框架構，最基本也最重要的指令 =====#####
dim(X)     #dimension (維度)84008列11行 (84008筆交易記錄,各有11個欄位)
head(X,2)  #會顯示前2筆記錄
head(X)  #會顯示前2筆記錄
#####===== (B2).數據框的架構 (KDD2, dim, head): 以下二指令是檢視數據框架構，最基本也最重要的指令 =====#####
dim(X)     #dimension (維度)84008列11行 (84008筆交易記錄,各有11個欄位)
head(X)    # head
#####===== (B3).數據探索 (KDD2, X$欄位, unique, length) =====#####
X$customer     #-- 數據框的欄位，可以錢號$ 來取用，得到的是一個變量 (向量)
#####===== (B4).數據框中的元素索引 (X[i,j]) =====#####
X$customer[2]     #(1) 取用第k個元素
X[2,3]            #(2) X[2,3] 是取用X數據框中(c2)
X[5,5]            #(2) X[2,3] 是取用X數據框中(c2)
X[1,7]            #(2) X[2,3] 是取用X數據框中(c2)
X[7,1]            #(2) X[2,3] 是取用X數據框中(c2)
X[2,]             #(3) 不指定時，就是所有行
X[,3]             #(4) 不指定時，就是所有列
X[,2]             #(4) 不指定時，就是所有列
X[2,"customer"]   #(5) 也可以直接用欄位名稱，當作文字索引，來取用元素
X[,"customer"]    #(6) 也可配合欄位名稱，所以效果就等於 X$customer
X[2,]             #(3) 不指定時，就是所有行
X[2,"customer"]   #(5) 也可以直接用欄位名稱，當作文字索引，來取用元素
#####===== (B5).基本數據轉換與數據探索 (KDD2/KDD3, range, as.--) =====#####
X$amount[1:10]    #amount 表頭 1:10
range(X$amount)   #range() 變量的範圍(最小值與最大值)
range(X$amount[1:10])   #range() 變量的範圍(最小值與最大值)
X$datetime[1:5]   #以字串(character)型態儲存，並編碼為 83827層級(levels)
X$datetime[1:5]   #以字串(character)型態儲存，並編碼為 83827層級(levels)
X$datetime[1:5]   #以字串(character)型態儲存，並編碼為 83827層級(levels)
X$date = as.Date(X$datetime,format="%Y-%m-%d")  #-- as.--() 是萬用數據轉換函式，此處是將字串型態 轉為 日期型態
range(X$date)         #-- [1] "2015-01-01" "2017-12-31"
#####===== (B7).數據轉換: 連續值切分離散區間 (KDD3, cut) =====#####
range(X$price)    #-- [1] 0 8280
breaks = c(-0.001,0,99,999,9999) #定義"贈品","數十元品","百元品","千元品" 價值區間
labels = c("贈品","數十元品","百元品","千元品") #上述標注標籤
X$price0 = cut( X$price, breaks, labels)
table(X$price0)   #用來看變量的分布(各區間的元素個數)
table(X$channel,X$price0)
#####===== (B9).數據視覺化 (KDD5, plot--Power BI) =====#####
barplot(table(X$price0))
#####===== (C3).數據框轉換後的數據轉換(Cv$FF0,$MM0,$BB0,$Q0,$Qf) =====#####
range(Cv$FF)   #--     1    11025
range(Cv$MM)   #-- -2400 18251044
#####===== (C1/B5).基本數據轉換 (KDD3, as.Date,cut) =====#####
X$date = as.Date(X$datetime,format="%Y-%m-%d")  #-- as.--() 是萬用數據轉換函式，此處是將字串型態 轉為 日期型態
range(X$date)         #-- [1] "2015-01-01" "2017-12-31"
X$price0 = cut( X$price, breaks = c(-0.001,0,99,999,9999), labels=c("贈品","數十元品","百元品","千元品"))
head(X,2)
#####===== (C2).SPC模型的數據轉換(X->Cv) =====#####
library(data.table)
setDT(X, key=c("customer","date"))
Cv = X[, .(D0=min(date), Df=max(date), DD=length(unique(date)),
FF=length(unique(invoiceNo)), MM=sum(amount), TT=sum(quantity)), by=customer ]
#####===== (B1).數據擷取 (KDD1, read.csv) =====#####
X = read.csv("XXX2.csv")
X
#####===== (B9).數據視覺化 (KDD5, plot--Power BI) =====#####
#建議產生標籤後，就以數據視覺化工具來檢視：如 Tableau, Power BI
barplot(table(X$price0))
#####===== (B1).數據擷取 (KDD1, read.csv) =====#####
X = read.csv("XXX2.csv")
X
#####===== (B2).數據框的架構 (KDD2, dim, head): 以下二指令是檢視數據框架構，最基本也最重要的指令 =====#####
dim(X)     # row / col
head(X)    # show data
#####===== (B3).數據探索 (KDD2, X$欄位, unique, length) =====#####
X$customer
unique(X$customer)
length(unique(X$customer))  #有 7774位客戶
#####===== (B4).數據框中的元素索引 (X[i,j]) =====#####
X$customer[2]
X[7,1]
X[2,]
X[,2]
X[2,"customer"]
#####===== (B5).基本數據轉換與數據探索 (KDD2/KDD3, range, as.--) =====#####
range(X$amount[1:10])   #range() 變量 Min 與 Max
X$datetime[1:5]
X$date = as.Date(X$datetime,format="%Y-%m-%d")     #as.()轉換函數，字串轉為日期
range(X$date)   #-- [1] "2015-01-01" "2017-12-31"
#####===== (B7).數據轉換: 連續值切分離散區間 (KDD3, cut) =====#####
range(X$price)    #-- [1] 0 8280
breaks = c(-0.001,0,99,999,9999) #定義"贈品","數十元品","百元品","千元品" 價值區間
labels = c("贈品","十位","百位","千位") #上述標注標籤
X$price0 = cut( X$price, breaks, labels)
#####===== (B8).最基本的數據模型 (KDD4, table) =====#####
table(X$price0)
table(X$channel,X$price0)
#####===== (B9).數據視覺化 (KDD5, plot--Power BI) =====#####
#建議產生標籤後，就以數據視覺化工具來檢視：如 Tableau, Power BI
barplot(table(X$price0))
par(family="STKaiti");    ##--顯示中文用
pie(table(X$channel))
par(family="STKaiti");    ##--顯示中文用
pie(table(X$channel))
barplot(table(X$channel))
boxplot(X$price~X$channel, main="price~channel")
#####===== (B9).數據視覺化 (KDD5, plot--Power BI) =====#####
#建議產生標籤後，就以數據視覺化工具來檢視：如 Tableau, Power BI
barplot(table(X$price0))
#####===== (B1).(KDD4)兩種進階表格法 (addmargins(), prop.table()) =====#####
addmargins( table(X$channel, X$price0) )  #-- (1) 列總和(rowSums)與行總和(colSums)
########## (B).進一步的好用指令 ##########
t = table(X$channel, X$price0
addmargins( prop.table( table(X$channel, X$price0), margin=1 ) )  #-- (2) 比例表(prop.table)
########## (B).進一步的好用指令 ##########
t = table(X$channel, X$price0
########## (B).進一步的好用指令 ##########
addmargins( t )  #-- 顯示邊際總和
########## (B).進一步的好用指令 ##########
t = table(X$channel, X$price0)
addmargins( t )  #-- 顯示邊際總和
t
addmargins( prop.table( t, margin=1 ) )  #-- (2) 比例表(prop.table)
addmargins( prop.table( t) )
addmargins( prop.table( t, margin=1 ) )
#margin = Null 直接轉換
#margin = 1 按行求百分比
#margin = 2 按列求百分比
addmargins( prop.table( t, margin=1))*100#-- 比例表乘上100比較容易看
round( 100*addmargins( prop.table( t, margin=1  ), margin = 2 ), 1 )  #-- 比例表乘上100比較容易看
#margin = Null 直接轉換
#margin = 1 按行求百分比
#margin = 2 按列求百分比
addmargins( prop.table( t, margin=1)) * 100  #-- 比例表乘上100比較容易看
addmargins( prop.table( t, margin=1),margin = 2) * 100  #-- 比例表乘上100比較容易看
#margin = Null 直接轉換
#margin = 1 按行求百分比
#margin = 2 按列求百分比
n = addmargins( prop.table( t, margin=1)) * 100  #-- 比例表乘上100比較容易看
round(n,1)  #-- 比例表乘上100比較容易看
round(n,2)  #-- round(計算至少數點後)
range(X$amount)   #-- [1] -22320  37100
which(X$amount>30000)               #-- [1] 31728 --> 第 31728 筆交易紀錄, 銷售金額大於 30000 元 --> 買什麼東西啊?
X$product[ which(X$amount>30000) ]  #--  "p3251" --> "p3251"產品
which(X$amount>30000)               #-- 第 31728 筆交易紀錄
X$product[ which(X$amount>30000) ]  #--  "p3251" --> "p3251"產品
X$product[ which(X$amount>30000) ]  #-- p3251 產品
X[ which(X$amount>30000), ]         #--> 調出最高成交價(amount)的交易記錄
#       invoiceNo channel customer product category price       datetime quantity amount category2    cost       date price0
# 31728    N14550      s4    c3376   p3251   kind11  2650 2016/4/5 21:01       20  37100      sub1 1413.78 2016-04-05 千元品
X[ which(X$amount>30000), c("customer","quantity","product")]   #--> 是 c3376客戶 買了 20個 p3251產品
range(X$amount)   #-- [1] -22320  37100
table(X[which(X$amount<0), c("channel","price0")])
table(X[which(X$amount<0), c("channel","price0")])
X[which((X$amount<0)&(X$price0=="數十元品")), ]
table(X[which(X$amount<0), c("channel","price0")])
X[which((X$amount<0)&(X$price0=="數十元品")), ]
#####===== (B4).表格中元素的排序 (table(),sort(),order()) =====#####
table(X$category)    #-- 品類太多了....
#####===== (B3).數據探索 (KDD2, X$欄位, unique, length) =====#####
X$customer
unique(X$customer)
length(unique(X$customer))  #有 7774位客戶
table(X$customer)    #-- 品類太多了....
table(X$category)    #-- 品類太多了....
sort(table(X$category),decreasing=T)[1:10]                  #-- 由數量大到數量小,比較容易抓出重點(前20項)
#####===== (B3).數據探索 (KDD2, X$欄位, unique, length) =====#####
X$customer
unique(X$customer)
length(unique(X$customer))  #有 7774位客戶
table(X$customer)    #-- 客戶分佈品類
sort(table(X$customer),decreasing=T)[1:10]                  #-- 由數量大到數量小,比較容易抓出重點(前20項)
sum(round( 100*sort(table(X$category),decreasing=T)[1:20]/dim(X)[1], 2 ))  #-- 前10項就佔90%以上了
# kind2  kind1  kind3 kind12 kind16 kind17 kind11 kind56 kind57  kind6
# 38.00  12.84  11.09  10.01   4.08   3.90   3.70   3.07   1.96   1.72
TT = table(X$channel,X$category);  addmargins(TT[order(rowSums(TT),decreasing=T), order(colSums(TT),decreasing=T)][,1:10])
sum(round( 100*sort(table(X$category),decreasing=T)[1:20]/dim(X)[1], 2 ))  #-- 前10項就佔90%以上了
# kind2  kind1  kind3 kind12 kind16 kind17 kind11 kind56 kind57  kind6
# 38.00  12.84  11.09  10.01   4.08   3.90   3.70   3.07   1.96   1.72
TT = table(X$channel,X$category);  addmargins(TT[order(rowSums(TT),decreasing=T), order(colSums(TT),decreasing=T)][,1:10])
table(X$category)
table(X$category)
sort(table(X$category)
sort(table(X$category)
table(X$category)
sort(table(X$category))
table(X$category)
sort(table(X$category))
sort(table(X$category),decreasing=T)
sort(table(X$customer))[1:10]   #-- 由小到大
sort(table(X$customer),decreasing=T)[1:10]   #-- 由大到小
length(unique(X$customer))  #有 7774位客戶
table(X$customer)    #-- 客戶分佈品類
sort(table(X$customer))[1:10]   #-- 由小到大
sort(table(X$customer),decreasing=T)[1:10]   #-- 由大到小
sort(table(X$category),decreasing=T)[1:10]
sum(round( 100*sort(table(X$category),decreasing=T)[1:20]/dim(X)[1], 2 ))  #-- 前10項就佔90%以上了
sort(table(X$customer))[1:10]   #-- 由小到大
sort(table(X$customer),decreasing=T)[1:10]   #-- 由大到小
dim(X)[1]
#####===== (B2).數據框的架構 (KDD2, dim, head): 以下二指令是檢視數據框架構，最基本也最重要的指令 =====#####
dim(X)     # row / col
#####===== (B2).數據框的架構 (KDD2, dim, head): 以下二指令是檢視數據框架構，最基本也最重要的指令 =====#####
rownum = dim(X)[1]     # [1] row / [2]col
colnum = dim(X)[2]
sort(table(X$customer),decreasing=T)[1:10] / rownum
sort(table(X$customer),decreasing=T)[1:10] / rownum * 100
sum (sort(table(X$customer),decreasing=T)[1:10] / rownum * 100)
sum (sort(table(X$customer),decreasing=T)[1:20] / rownum * 100)
sum(round( 100*sort(table(X$category),decreasing=T)[1:20]/dim(X)[1], 2 ))  #-- 前10項就佔90%以上了
sort(table(X$customer))[1:10]   #-- 由小到大
sort(table(X$customer),decreasing=T)[1:10]   #-- 由大到小
sum (sort(table(X$customer),decreasing=T)[1:10] / rownum * 100)  #--- 前 10 大客戶佔了
#####===== (C2).數據框中的數據類型 =====#####
head(X,2)
#####===== (C2).數據框中的數據類型 =====#####
head(X,2)
#####===== (C2).數據框中的數據類型 =====#####
head(X,2)
#   invoiceNo channel customer product category price        datetime quantity amount category2   cost       date price0
# 1        N1      s1       c1      p1    kind1  1980  2015/1/7 20:07        1   1692      sub1 931.39 2015-01-07 千元品
# 2        N2      s1       c2      p2    kind1  1400 2015/1/18 19:56        1   1197      sub2 793.36 2015-01-18 千元品
str(X)   #-- structure (str(): 不常用，上課講解用，不列入常用指令)
#   invoiceNo channel customer product category price        datetime quantity amount category2   cost       date price0
# 1        N1      s1       c1      p1    kind1  1980  2015/1/7 20:07        1   1692      sub1 931.39 2015-01-07 千元品
# 2        N2      s1       c2      p2    kind1  1400 2015/1/18 19:56        1   1197      sub2 793.36 2015-01-18 千元品
str(X)   #-- structure (str(): 不常用，上課講解用，不列入常用指令)
#####===== (C3).因子(factor)與數據類型轉換(as.-- ) =====#####
head(X$price0,15)
#####===== (C4).日期數據類型轉換(as.Date(), strptime()) =====#####
head(X$datetime)
#####===== (C4).日期數據類型轉換(as.Date(), strptime()) =====#####
head(X$datetime)
as.Date( head(X$datetime) )    #-- 直接轉日期,不設格式,很常會判斷出錯(這次是對的)
X$date = as.Date( X$datetime, format="%Y-%m-%d" );  head(X$date)           #-- 格式錯誤,也轉換不出來
#####===== (C4).日期數據類型轉換(as.Date(), strptime()) =====#####
head(X$datetime)
as.Date( head(X$datetime) )    #-- 直接轉日期,不設格式,很常會判斷出錯(這次是對的)
X$date = as.Date( X$datetime, format="%Y-%m-%d" );  head(X$date)           #-- 格式錯誤,也轉換不出來
# [1] NA NA NA NA NA NA
X$date = as.Date( X$datetime, format="%Y/%m/%d" );  head(X$date)           #-- 加上格式的日期轉換
# [1] NA NA NA NA NA NA
X$date = as.Date( X$datetime, format="%Y/%m/%d" );  head(X$date)           #-- 加上格式的日期轉換
X$date = as.Date( X$datetime, format="%Y-%m-%d" );
head(X$date)           #-- 格式錯誤,也轉換不出來
X$time = strptime( X$datetime, format="%Y/%m/%d %H:%M" );  head(X$time,5)  #-- 提取時間格式的轉換: CST (中原標準時間,Central Standard Time)
#####===== (C5) R的軟件包(package)使用 =====#####
#== (1) R的綜合典藏網(CRAN,Comprehensive R Archive Network)
#       共有6400(2015)/8000(2016)/10000(2017)/13437(2018) 個軟件包(packages)
nrow(available.packages())  #-- [1] 16495/16235  --> 可用來看目前網絡上軟件包的數量
#== (2) 安裝軟件包，只需執行一次，會從網路上下載安裝軟件包, 進入電腦的硬盤
# install.packages("lubridate")
#== (3) 當安裝好後，就可以隨時在應用前,以 library() 調用此軟件包
library(lubridate)
#####===== (C6).豐富的日期變量(weekdays()與hour()不用記憶，只要在需用時google即可查得 ) =====#####
X$weekdays = weekdays(X$date);   head(X$weekdays)   #-- [1] "星期三" "星期日" "星期三" "星期三" "星期六" "星期三"
X$hour = hour(X$time);   head(X$hour)               #-- [1] 20 19 21 19 12 21
#####===== (C6).豐富的日期變量(weekdays()與hour()不用記憶，只要在需用時google即可查得 ) =====#####
X$weekdays = weekdays(X$date)
head(X$weekdays)   #-- [1] "星期三" "星期日" "星期三" "星期三" "星期六" "星期三"
X$weekdays = weekdays(X$date)
head(X$weekdays)
X$hour = hour(X$time);
X$hour = hour(X$time);
head(X$hour)               #-- [1] 20 19 21 19 12 21
X$weekdays = weekdays(X$date)
head(X$weekdays)
X$hour = hour(X$time);
head(X$hour)               #-- [1] 20 19 21 19 12 21
X$hour = hour(X$datetime);
head(X$hour)               #-- [1] 20 19 21 19 12 21
addmargins( table(X$hour,X$weekdays) )
