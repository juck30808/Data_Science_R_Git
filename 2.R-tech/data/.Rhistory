library(RCurl)
URL = "http://www.weather.com.cn/weathern/101340101.shtml"
#####===== (5A) (KDD1数据取得) 網絡爬文 (URL->X) =====#####
library(RCurl)
URL = "http://www.weather.com.cn/weathern/101340101.shtml"
X = getURL(URL, .encoding="GB");  head(X)
#####=====*(5C) (KDD3数据转换) 转为天气数据框 (X->XXX) =====#####
Xday = NULL;   Xweather = NULL;   Xtemp = NULL;   Xwind = NULL
for (k in 1:length(XX)) {
Xday[k] = xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/h1")[[k]] )
Xweather[k] = xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/p[@class='wea']")[[k]] )
Xtemp[k] = xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/p[@class='tem']")[[k]] )
Xwind[k] = xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/p[@class='win']")[[k]] )
}
XXX = data.frame(day=Xday, weather=Xweather, temp=Xtemp, wind=Xwind);  dim(XXX);  head(XXX,3)  #-- [1] 7 4
#           day  weather          temp                     wind
# 1 24日（今天）     多云      \n13℃\n               \n\n\n\n\n
# 2 25日（明天） 小雨转晴 \n21℃/11℃\n        \n\n\n\n\n5-6级\n
# 3 26日（后天）       晴  \n19℃/9℃\n        \n\n\n\n\n4-5级\n
write.xlsx(XXX,"/Users/mcsl/Desktop/XXX.xlsx")  #-- 通常，爬到文後，解析後，趕快將標籤(tag)存檔
#####===== (5D) (KDD4数据模型) 这一周天气的简要显示 (table(XXX$..)) =====#####
table(XXX$weather)
# 多云       晴 小雨转晴
#    1        5        1
table(XXX$wind)   #-- 這數據不太乖，有沒有改進的方法？
# \n\n\n\n\n             \n\n\n\n\n\n        \n\n\n\n\n3-4级\n \n\n\n\n\n3-4级转4-5级\n        \n\n\n\n\n4-5级\n
#          1                        1                        1                        1                        2
# \n\n\n\n\n5-6级\n
#                 1
table(XXX$weather, XXX$wind)
#####===== (5E) (KDD5数据呈现) 天气数据图 (plot(XXX$..)) =====#####
par(family="STKaiti");
barplot(table(XXX$weather), main="本周天气分布图")
pie(table(XXX$weather), main="本周天气比例图")
levels(XXX$weather) = c("晴","多云","小雨转晴")
plot(XXX$day,as.integer(XXX$weather), main="本周天气时序图")
#####===== (5F) 几个进阶的处理 =====#####
k = 6
##== (1) 去除 \n ==###
xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/p[@class='win']")[[k]] )
# [1] "\n\n\n\n\n5-6级\n"
library(stringr)
str_replace_all( xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/p[@class='win']")[[k]] ), "\n","")
# [1] "5-6级"
##== (2) 提取最高气温与最低气温 ==###
A = str_extract_all( xmlValue( xpathSApply( htmlParse(X),"//ul[@class='t clearfix']/li/p[@class='tem']")[[k]] ),
"[:digit:]*")[[1]]
pander(paste0(">> (1) APP數據共: ",dim(X)[1],"筆紀錄\n\n"))
pander(paste0(">> (1) APP數據共: ",dim(X)[1],"筆紀錄\n\n"));
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
library(readxl)
X <- as.data.frame(read_excel('/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/googleplaystore4_(7000).xlsX'))
dim(X);
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
library(readxl)
X <- as.data.frame(read_excel('/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/googleplaystore4_(7000).xlsX'))
dim(X);
head(X,2)
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
range(X$Rating)
table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) )
range(X$Rating)
table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) )
range(X$Rating)
aa = table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) )
aa
aa[1]
aa[2]
range(X$Year)   #2010 - 2018
table(X$Year)
range(X$Year)   #2010 - 2018
table(X$Year)
XX = X[which(X$Year>=2018),];   dim(XX)
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
X.hc = hclust( dist( X[,c("Rating","Reviews","Installs")] ),method="ward.D")
X.group = cutree(X.hc, k=20)
X.group[1:50]
table(X.group)
## (KDD2) APP基本基料探索 (X)
```{r, echo=FALSE, warning=FALSE}
range(X$Rating)
range(X$Rating)
rating_cut = table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) )
#--- Rtech04 ----
# install.packages( c("arules","arulesViz","igraph","data.table","jiebaR","text2vec") )
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data")
library(arules);library(igraph)
data(Groceries)
X = read.csv("googleplaystore4_(7000).csv");   dim(X);   head(X,2)
data(Groceries)
X = read.csv("googleplaystore4_(7000).csv");   dim(X);   head(X,2)
View(Groceries)
table(X$Category))
# [1] 7684   16
# App                                            Category Rating   Reviews Size Installs Type Price Content.Rating                    Genres Last.Updated Year Month Day Current.Ver  Android.Ver
# Photo Editor & Candy Camera & Grid & ScrapBook ART_AND_DESIGN    4.1     159  19M    10,000 Free     0       Everyone              Art & Design     7-Jan-18 2018     1   7       1.0.0 4.0.3 and up
#                            Coloring book moana ART_AND_DESIGN    3.9     967  14M   500,000 Free     0       Everyone Art & Design;Pretend Play    15-Jan-18 2018     1  15       2.0.0 4.0.3 and up
summary(X)
table(X$Category)
table(table(X$Category))
table(X$Category)
table(table(X$Category))
# measure 評估各個品類(Category) 在有多少有 免費/年份推出
#PG=table(X$Category,X$Year);   rownames(PG)=NULL;  PG  # 1-33個品項  #PG[1:10,]
PD=table(X$Category,X$Year);   rownames(PD)=NULL;  PD     # 1-33個品項  #PD[1:10,]
#table(table(X$Genres))[1:17]
# 37   38   43   47   51   56   59   61   63   84   89   95  110  116  144  160  166  171  177  179  211  223  235  245  247  266  278  279  324  627  966 1602
# 1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1    1
t(X[1:20,7:10])
table(X$Category)
table(X.group)
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
library(readxl)
X <- as.data.frame(read_excel('/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/googleplaystore4_(7000).xlsX'))
dim(X);
head(X,2)
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
range(X$Rating)
table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) )
range(X$Year)   #2010 - 2018
table(X$Year)
XX = X[which(X$Year>=2018),];   dim(XX)
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
X.hc = hclust( dist( X[,c("Rating","Reviews","Installs")] ),method="ward.D"); X.hc
X.group = cutree(X.hc, k=20);X.group
table(X.group)
view(Xgroup)
view(X.group)
view(X.group)
View(X.group)
X.group = cutree(X.hc, k=20);X.group
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
X.hc = hclust( dist( X[,c("Rating","Reviews","Installs")] ),method="ward.D"); X.hc
X.group = cutree(X.hc, k=20);X.group
table(X.group)
#####===== (4) (KDD5) 數據解讀(XX.group) =====#####
kk = 1  #X.group(kk)
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
library(readxl)
X <- as.data.frame(read_excel('/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/googleplaystore4_(7000).xlsX'))
dim(X);
head(X,2)
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
range(X$Rating)
table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) )
range(X$Year)   #2010 - 2018
table(X$Year)
XX = X[which(X$Year>=2018),];   dim(XX)
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
X.hc = hclust( dist( X[,c("Rating","Reviews","Installs")] ),method="ward.D"); X.hc
X.group = cutree(X.hc, k=20);X.group
Ncls = 20  #cause k =20
X[which(X.group==1),c("Rating","Reviews","Installs")]
round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, max),0)
round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, min),0)
round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, mean),2)
round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, sd),2)
X.group
#####===== (4) (KDD5) 數據解讀(XX.group) =====#####
kk = 1  #X.group(kk)
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
c(kk,length(indKK),
apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
c(round(kk,1),
round(length(indKK),1),
apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
c(round(kk,0),
round(length(indKK),0),
apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
#####===== (4) (KDD5) 數據解讀(XX.group) =====#####
kk = 1  #X.group(kk)
indKK = which(X.group==kk);   indKK
c(kk,length(indKK),
apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
c(kk,length(indKK),
apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
##== Group Means (Gmean) ==##
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:2,]
##== Group Means (Gmean) ==##
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:2,]
#####===== (4) (KDD5) 數據解讀(XX.group) =====#####
kk = 1  #X.group(kk)
indKK = which(X.group==kk);   indKK
c(kk,length(indKK),
apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
#c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
c(apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
c(apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
##== Group Means (Gmean) ==##
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:2,]
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:1,]
##== Group Means (Gmean) ==##
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:1,]
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);   indKK
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:1,]
##== Group Features (Gfeature) ==##
colnames(Gmean)
round(Gmean[1,],2)
#####===== (4) (KDD5) 數據解讀(XX.group) =====#####
kk = 1  #X.group(kk)
indKK = which(X.group==kk);   indKK
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
round(Gmean,2)[order(Gmean[,2],decreasing=T),][1:1,]
#####===== (4) (KDD5) 數據解讀(XX.group) =====#####
kk = 1  #X.group(kk)
indKK = which(X.group==kk);   indKK
indKK = which(X.group==kk);   indKK
Gmean = NULL
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
##== Group Features (Gfeature) ==##
#colnames(Gmean)
round(Gmean[1,],2)
AA = paste0(round(Gmean[1,3:5],2), " * ", colnames(Gmean)[3:5]);  AA
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
for (kk in 1:Ncls) {
indKK = which(X.group==kk);
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
##== Group Features (Gfeature) ==##
#colnames(Gmean)
round(Gmean[1,5],2)
##== Group Features (Gfeature) ==##
#colnames(Gmean)
round(Gmean[1,],2)
AA = paste0(round(Gmean[1,3:5],2), " * ", colnames(Gmean)[3:5]);  AA
BB = paste( AA, collapse=" + ");   BB
```{r, echo=FALSE, warning=FALSE}
##==> 用迴圈包成Gfeature
Gfeature = NULL
for (k in 1:dim(Gmean)[1]) {
print(k)
AA = paste0(round(Gmean[k,3:5],2), " * ", colnames(Gmean)[3:5]);  AA
BB = paste( AA, collapse="+")
print(BB)
Gfeature[k] = BB
}
Gfeature
##==> 用迴圈包成Gfeature
Gfeature = NULL
for (k in 1:dim(Gmean)[1]) {
print(k)
AA = paste0(round(Gmean[k,3:5],2), " * ", colnames(Gmean)[3:5]);  AA
BB = paste( AA, collapse="+")
print(BB)
Gfeature[k] = BB
}
Gfeature
##==> 用迴圈包成Gfeature
Gfeature = NULL
for (k in 1:dim(Gmean)[1]) {
print(k)
AA = paste0(round(Gmean[k,3:5],2), " * ", colnames(Gmean)[3:5]);  AA
BB = paste( AA, collapse="+")
print(BB)
Gfeature[k] = BB
}
Gfeature
Gfeature
plot(graph.arPD, edge.arrow.size=0.1, edge.curved=0.3)
#--- Rtech04 ----
# install.packages( c("arules","arulesViz","igraph","data.table","jiebaR","text2vec") )
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data")
library(arules);library(igraph)
data(Groceries)
X = read.csv("googleplaystore4_(7000).csv");   dim(X);   head(X,2)
# [1] 7684   16
# App                                            Category Rating   Reviews Size Installs Type Price Content.Rating                    Genres Last.Updated Year Month Day Current.Ver  Android.Ver
# Photo Editor & Candy Camera & Grid & ScrapBook ART_AND_DESIGN    4.1     159  19M    10,000 Free     0       Everyone              Art & Design     7-Jan-18 2018     1   7       1.0.0 4.0.3 and up
#                            Coloring book moana ART_AND_DESIGN    3.9     967  14M   500,000 Free     0       Everyone Art & Design;Pretend Play    15-Jan-18 2018     1  15       2.0.0 4.0.3 and up
summary(X)
table(X$Category)
table(table(X$Category))
# measure 評估各個品類(Category) 在有多少有 免費/年份推出
#PG=table(X$Category,X$Year);   rownames(PG)=NULL;  PG  # 1-33個品項  #PG[1:10,]
PD=table(X$Category,X$Year);   rownames(PD)=NULL;  PD     # 1-33個品項  #PD[1:10,]
# apriori演算法大概是這樣運作的，我們必須要設定support以及confidence:
# 支持度(support)：「規則」在資料內具有普遍性，也就是這些 A 跟 B 同時出現的機率多少。
# 信賴度(confidence)：「規則」要有一定的信心水準，也就是當購買 A 狀態下，也會購買 B 的條件機率。
txPD = lapply( 1:dim(PD)[1], FUN=function(k) colnames(PD)[which(PD[k,]>0)] )
arPD = apriori( txPD[1:6], parameter=list(support=0.06, confidence=0.8), control=list(verbose=FALSE));
#lhs=>rhs 代表買左邊也會買右邊的意思，而支持度與信賴度，則分別代表了普遍性與信心水準。
inspect(arPD[9:20,])
graph.arPD = graph.edgelist( cbind(inspect(arPD)[1:50,]$lhs, inspect(arPD)[1:50,]$rhs) )
plot(graph.arPD, edge.arrow.size=0.1, edge.curved=0.3)
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0)
kk = 1  #X.group(kk)
indKK = which(X.group==kk);
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
#round(Gmean[1,],2)
AA = paste0(round(Gmean[1,3:5],2), " * ", colnames(Gmean)[3:5]);  #AA
BB = paste( AA, collapse=" + ");   #BB
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0)
## (KDD1) 原生資料展示
```{r, echo=FALSE, warning=FALSE}
#install.packages(c("pander","kableExtra","prettydoc")
#https://www.rdocumentation.org/packages/kableExtra/versions/1.3.1/topics/kable_styling 語法參考資料
library(data.table)
#install.packages(c("pander","kableExtra","prettydoc")
#https://www.rdocumentation.org/packages/kableExtra/versions/1.3.1/topics/kable_styling 語法參考資料
library(data.table)
library(pander);   library(knitr);      library(kableExtra)
#install.packages(c("pander","kableExtra","prettydoc")
#https://www.rdocumentation.org/packages/kableExtra/versions/1.3.1/topics/kable_styling 語法參考資料
library(data.table)
library(pander);   library(knitr);      library(kableExtra)
library(readxl)
X =as.data.frame(read_excel('/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/googleplaystore4_(7000).xlsX'))
#@
pander(paste0(">> (1) APP數據Row共 ",dim(X)[1],"筆紀錄\n\n"));
pander(paste0(">> (2) APP數據Col共 ",dim(X)[2],"筆紀錄\n\n"));
pander(">> (3) 數據樣貌為:\n\n");
kable(head(X,4)) %>%    #make a table
kable_styling(c("striped", "bordered")) %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T)
kable(head(X,4)) %>%    #make a table
kable_styling(c("striped", "bordered")) %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T)
## (KDD2)
```{r, echo=FALSE, warning=FALSE}
#range(X$Rating)
rating_cut = table( cut(X$Rating, breaks=c(0,1,2,3,4,5)) );
#@
#https://blog.gtwang.org/r/ggplot2-tutorial-basic-concept-and-qplot/ 圖形化ggplot語法參考資料
pander(paste0(">> 資料區間[1] Rating 在 0-1 之間",rating_cut[1],"筆\n\n"));
pander(paste0(">> 資料區間[2] Rating 在 1-2 之間",rating_cut[2],"筆\n\n"));
pander(paste0(">> 資料區間[3] Rating 在 2-3 之間",rating_cut[3],"筆\n\n"));
pander(paste0(">> 資料區間[4] Rating 在 3-4 之間",rating_cut[4],"筆\n\n"));
pander(paste0(">> 資料區間[5] Rating 在 4-5 之間",rating_cut[5],"筆\n\n"));
pander(paste0(">> Rating 的直方分佈圖"));
library(ggplot2)
qplot(X$Rating)
library(ggplot2)
qplot(X$Rating)
## (KDD3)
```{r, echo=FALSE, warning=FALSE}
X.hc = hclust( dist( X[,c("Rating","Reviews","Installs")] ),method="ward.D")
X.group = cutree(X.hc, k=20)
Ncls = 20  #cause k =20
#X[which(X.group==1),c("Rating","Reviews","Installs")]                                   # Rating  Reviews Installs
X.max = round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, max),0)   # 5      6477    10000      -max
X.min = round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, min),0)   # 1      1       1          -min
X.mean = round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, mean),2) # 4.11   145.01  4646.57    -mean
X.sd = round(apply(X[which(X.group==1),c("Rating","Reviews","Installs")], 2, sd),2)     # 0.73   360.82  4272.84    -sd
#@
pander(paste0(">> (1) 預設 K 值去得知其分群度：k=",Ncls,"\n\n"));
pander(paste0(">> (3) 最小值(Min)：Rating值 ",X.min[1],"\n / Reviews值",X.min[2],"\n / Installs值",X.min[3],"\n\n"));
pander(paste0(">> (4) 平均值(Mean)：Rating值 ",X.mean[1],"\n / Reviews值",X.mean[2],"\n / Installs值",X.mean[3],"\n\n"));
pander(paste0(">> (4) 標準差(STD)：Rating值 ",X.sd[1],"\n / Reviews值",X.sd[2],"\n / Installs值",X.sd[3],"\n\n"));
pander(paste0(">> 在 ward.D 演算法下的分群分析\n\n"));
kable(table(X.group)) %>%    #make a table
kable_styling(c("striped", "bordered")) %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T)
#@
pander(paste0(">> (1) 預設 K 值去得知其分群度：k=",Ncls,"\n\n"));
pander(paste0(">> (2) 最大值(Max)：Rating值 ",X.max[1],"\n / Reviews值",X.max[2],"\n / Installs值",X.max[3],"\n\n"));
pander(paste0(">> (3) 最小值(Min)：Rating值 ",X.min[1],"\n / Reviews值",X.min[2],"\n / Installs值",X.min[3],"\n\n"));
pander(paste0(">> (4) 平均值(Mean)：Rating值 ",X.mean[1],"\n / Reviews值",X.mean[2],"\n / Installs值",X.mean[3],"\n\n"));
pander(paste0(">> (4) 標準差(STD)：Rating值 ",X.sd[1],"\n / Reviews值",X.sd[2],"\n / Installs值",X.sd[3],"\n\n"));
pander(paste0(">> 在 ward.D 演算法下的分群分析\n\n"));
kable(table(X.group)) %>%    #make a table
kable_styling(c("striped", "bordered")) %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T)
## (KDD4)
```{r, echo=FALSE, warning=FALSE}
kk = 1  #X.group(kk)
indKK = which(X.group==kk);
Gmean = NULL
for (kk in 1:Ncls) {
indKK = which(X.group==kk);
c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean))
Gmean = rbind(Gmean, c(kk,length(indKK), apply(X[indKK,c("Rating","Reviews","Installs")], 2, mean)))
}
#round(Gmean[1,],2)
AA = paste0(round(Gmean[1,3:5],2), " * ", colnames(Gmean)[3:5]);  #AA
BB = paste( AA, collapse=" + ");   #BB
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0)
#@
pander(">> (1)20個類別總覽:平均值 ");
pander(">> (2)可以看出最大的20個類別總覽:平均值 ");
kable(round(Gmean,0)[order(Gmean[,2],decreasing=T),])%>%
kable_styling(c("striped", "bordered")) %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T)
```
## (KDD5)
```{r, echo=FALSE, warning=FALSE}
Gfeature = NULL
for (k in 1:dim(Gmean)[1]) {
print(k)
AA = paste0(round(Gmean[k,3:5],2), " * ", colnames(Gmean)[3:5]);  #AA
BB = paste( AA, collapse="+")
print(BB)
Gfeature[k] = BB
}
Gfeature
#write.csv(Gm,"Gm.csv")
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0)
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0)[1]
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean,0)[2]
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean[1],0)
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean[1,3],0)
# "4.1 * Rating + 145 * Reviews + 4646.6 * Installs"
round(Gmean[1,4],0)
#@
pander(">> (1)20個類別總覽:平均值 ");
pander(paste0(">> (2) 可以看出 Rating值在",Gmean[1,3],"\n / Reviews值",Gmean[1,4],"\n / Installs值",Gmean[1,5],"的值佔的總數最多，約有",Gmean[1,2]， "\n\n"));
Gmean[1,4]
#@
pander(">> (1)20個類別總覽:平均值 ");
pander(paste0(">> (2) 可以看出 Rating值在",Gmean[1,3],"/ Reviews值",Gmean[1,4],"/ Installs值",Gmean[1,5],"的值佔的總數最多，共",Gmean[1,2],"筆\n\n"));
for (k in 1:dim(Gmean)[1]) {
print(k)
AA = paste0(round(Gmean[k,3:5],2), " * ", colnames(Gmean)[3:5]);  #AA
BB = paste( AA, collapse="+")
print(BB)
Gfeature[k] = BB
}; #Gfeature
library(arules);library(igraph)
data(Groceries)
X = read.csv("googleplaystore4_(7000).csv");   dim(X);   head(X,2)
# [1] 7684   16
# App                                            Category Rating   Reviews Size Installs Type Price Content.Rating                    Genres Last.Updated Year Month Day Current.Ver  Android.Ver
# Photo Editor & Candy Camera & Grid & ScrapBook ART_AND_DESIGN    4.1     159  19M    10,000 Free     0       Everyone              Art & Design     7-Jan-18 2018     1   7       1.0.0 4.0.3 and up
#                            Coloring book moana ART_AND_DESIGN    3.9     967  14M   500,000 Free     0       Everyone Art & Design;Pretend Play    15-Jan-18 2018     1  15       2.0.0 4.0.3 and up
summary(X)
table(X$Category)
library(arules);library(igraph)
library(arules);library(igraph)
PD=table(X$Category,X$Year)
rownames(PD) = NULL;  #PD     # 1-33個品項  #PD[1:10,]
#以下計算只取PD值
txPD = lapply( 1:dim(PD)[1], FUN=function(k) colnames(PD)[which(PD[k,]>0)] )
arPD = apriori( txPD[1:6], parameter=list(support=0.06, confidence=0.8), control=list(verbose=FALSE))
#lhs=>rhs 代表買左邊也會買右邊的意思，而支持度與信賴度，則分別代表了普遍性與信心水準。
inPD = inspect(arPD[9:20,])
graph.arPD = graph.edgelist( cbind(inspect(arPD)[1:50,]$lhs, inspect(arPD)[1:50,]$rhs) )
#@
# apriori演算法大概是這樣運作的，我們必須要設定support以及confidence:
pander(">> (1)我們採用 apriori 演算法\n\n");
pander(">> (2)支持度(support)：「規則」在資料內具有普遍性，也就是這些 A 跟 B 同時出現的機率多少\n\n");
pander(">> (3)信賴度(confidence)：「規則」要有一定的信心水準，也就是當購買 A 狀態下，也會購買 B 的條件機率\n\n")
kable(inPD)%>%
kable_styling(c("striped", "bordered")) %>%
kable_styling(full_width = F) %>%
column_spec(1, bold = T)
plot(graph.arPD, edge.arrow.size=0.1, edge.curved=0.3)
