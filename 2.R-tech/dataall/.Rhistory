#####===== (A1).整合開發分析平台 (RStudio)--分成四區: =====#####
#-- (A)程式編輯區 (左上區)
#-- (B)指令執行區(左下區): 請用Shift-Dn指令標記7-9行後，用Ctrl-Enter將這三行送到指令執行區執行
x = 1:10
install.packages(c("pander","kableExtra","prettydoc"))
install.packages(c("pander","kableExtra","prettydoc"))
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
table(X$Year)
# 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993
#    9   46   36   17   14   14   21   16   15   17   16   41   43   60
# 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007
#  121  219  263  289  379  338  349  482  829  775  763  941 1008 1202
# 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2020  N/A
# 1428 1431 1259 1139  657  546  582  614  344    3    1  271
length(which(X$Year>=2010))   #-- [1] 5416
XX = X[which(X$Year>=2010),];   dim(XX)   #-- [1] 5416   11
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
XX.hc = hclust( dist( XX[,7:10] ) )
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
length(XX.group)   #-- [1] 5416
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  1  1  2  1  1  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  3  2  2  3  3  2  2  2  2  3  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
table(XX.group)
##== 試切成4類
XX.group = cutree(XX.hc, k=4);
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  2  1  3  1  1  3  3  3  1  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  4  3  3  4  4  3  3  3  3  4  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
table(XX.group)
# 1    2    3    4
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
length(XX.group)   #-- [1] 5416
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  1  1  2  1  1  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  3  2  2  3  3  2  2  2  2  3  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
table(XX.group)
##== 試切成4類
XX.group = cutree(XX.hc, k=4);
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  2  1  3  1  1  3  3  3  1  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  4  3  3  4  4  3  3  3  3  4  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
table(XX.group)
# 1    2    3    4
# 5    1   69 5341
table(cut.h.cluster, iris$Species)
# 1    2    3    4
# 5    1   69 5341
table(cut.h.cluster, XX
)
# 1    2    3    4
# 5    1   69 5341
table(cut.h.cluster, XX)
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
length(XX.group)   #-- [1] 5416
XX.group[1:50]
##== 試切成4類
XX.group = cutree(XX.hc, k=4);
XX.group[1:50]
XX.group = cutree(XX.hc, k=3);
XX.group[1:50]
table(XX.group)
XX.group = cutree(XX.hc, k=4);  XX.group[1:50]
table(XX.group)
XX.group = cutree(XX.hc, k=70);  XX.group[1:50]
table(XX.group)
XX.group = cutree(XX.hc, k=800);  XX.group[1:50]
table(XX.group)
XX.group = cutree(XX.hc, k=80);  XX.group[1:50]
table(XX.group)
XX.group = cutree(XX.hc, k=80);  XX.group[1:50]
table(XX.group)
plot(XX.group)
XX.group = cutree(XX.hc, k=3);  XX.group[1:50]
table(XX.group)
plot(XX.group)
##== (2)繪製鳶尾花類別分布圖
plot.iris <- function(xx,yy,xxlab,yylab) {
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
points(xx[Species=="setosa"],yy[Species=="setosa"],pch=1,col="blue")
points(xx[Species=="virginica"],yy[Species== "virginica"],pch=2,col="green")
points(xx[Species=="versicolor"],yy[Species== "versicolor"],pch=3,col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
plot.iris(Sepal.Length, Petal.Length, "Sepal.Length", "Petal.Length")
plot.iris(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length")
########## (P) 課前準備 ##########
##== (1) 從微信群組下載 本份講義程式檔 Rtech03.R 放入本門課課程目錄，並以 RStudio開啟
##== (2) 若見到本編程檔為中文亂碼，請以 File-->Reopen with Encoding --> UTF8，則可看到中文碼顯示
##== (3) 修改本程式第4行，設定工作目錄為 本門課工作目錄
##== (4) 下載本門課所需之軟件包至本機備用 -- 下行安裝指令只需執行一次
install.packages( c("fpc","jiebaR","text2vec","data.table","stringr") )
#####===== (1C)用於練習講解與比較的 iris 數據 =====#####
##== 美國加州大學歐文分校的機械學習數據庫http://archive.ics.uci.edu/ml/datasets/Iris
dim(iris);   head(iris,2)
#####===== (1D)鳶尾花類別以三種顏色作(Sepal.Length, Petal.Length)分布圖與聚類分布圖 =====#####
attach(iris)   ##== (1) 設定數據框為iris, 可以精簡以下的變量表示
##== (2)繪製鳶尾花類別分布圖
plot.iris <- function(xx,yy,xxlab,yylab) {
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
points(xx[Species=="setosa"],yy[Species=="setosa"],pch=1,col="blue")
points(xx[Species=="virginica"],yy[Species== "virginica"],pch=2,col="green")
points(xx[Species=="versicolor"],yy[Species== "versicolor"],pch=3,col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
plot.iris(Sepal.Length, Petal.Length, "Sepal.Length", "Petal.Length")
plot.iris(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length")
##== (2)繪製鳶尾花類別與聚類(iriscls)分布圖
plot.iris.cls <- function(xx,yy,xxlab,yylab,iriscls) {
xx = Petal.Width;   yy=Petal.Length;   xxlab="Petal.Width";  yylab="Petal.Length"
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
text(xx[Species=="setosa"],yy[Species=="setosa"],iriscls[1:50],col="blue")
text(xx[Species=="virginica"],yy[Species== "virginica"],iriscls[51:100],col="green")
text(xx[Species=="versicolor"],yy[Species== "versicolor"],iriscls[101:150],col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
########## (P) 課前準備 ##########
##== (1) 從微信群組下載 本份講義程式檔 Rtech03.R 放入本門課課程目錄，並以 RStudio開啟
##== (2) 若見到本編程檔為中文亂碼，請以 File-->Reopen with Encoding --> UTF8，則可看到中文碼顯示
##== (3) 修改本程式第4行，設定工作目錄為 本門課工作目錄
##== (4) 下載本門課所需之軟件包至本機備用 -- 下行安裝指令只需執行一次
install.packages( c("fpc","jiebaR","text2vec","data.table","stringr") )
#####===== (1C)用於練習講解與比較的 iris 數據 =====#####
##== 美國加州大學歐文分校的機械學習數據庫http://archive.ics.uci.edu/ml/datasets/Iris
dim(iris);   head(iris,2)
#####===== (1D)鳶尾花類別以三種顏色作(Sepal.Length, Petal.Length)分布圖與聚類分布圖 =====#####
attach(iris)   ##== (1) 設定數據框為iris, 可以精簡以下的變量表示
##== (2)繪製鳶尾花類別分布圖
plot.iris <- function(xx,yy,xxlab,yylab) {
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
points(xx[Species=="setosa"],yy[Species=="setosa"],pch=1,col="blue")
points(xx[Species=="virginica"],yy[Species== "virginica"],pch=2,col="green")
points(xx[Species=="versicolor"],yy[Species== "versicolor"],pch=3,col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
plot.iris(Sepal.Length, Petal.Length, "Sepal.Length", "Petal.Length")
plot.iris(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length")
##== (2)繪製鳶尾花類別與聚類(iriscls)分布圖
plot.iris.cls <- function(xx,yy,xxlab,yylab,iriscls) {
xx = Petal.Width;   yy=Petal.Length;   xxlab="Petal.Width";  yylab="Petal.Length"
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
text(xx[Species=="setosa"],yy[Species=="setosa"],iriscls[1:50],col="blue")
text(xx[Species=="virginica"],yy[Species== "virginica"],iriscls[51:100],col="green")
text(xx[Species=="versicolor"],yy[Species== "versicolor"],iriscls[101:150],col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
plot.iris.cls(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length", as.integer(iris$Species))
#             (4)    更新簇的平均值(mean), 即重新計算每個簇中對象的平均值(原型)
#             (5) until k個平均值不再發生變化
##== 計算的複雜度(complexity): n--樣本個數,K--簇的個數,d--屬性個數, l--迭代次數
#    -- 空間複雜度: O((n+K)d)
#    -- 時間複雜度: O(nxKxlxd)
##== 三種選取初始質心的方法
#    -- (1) 隨機選取
#    -- (2) 以層次聚類做小樣本聚類，當做初始質心
#    -- (3) 隨機選第一個點，再選擇距離最遠的點當做下一個初始質心
##== 以iris數據進行實驗 [殷, 8.6.1]
set.seed(20)   #-- 隨機選取初始質心
wordset = c("鄭州市","蓮花街","中原區","思明區","李大爺","張三豐","李四")  #設定一個字串
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/")
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/")
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/")
########## (P) 課前準備 ##########
##== (2) 中文亂碼，File-->Reopen with Encoding --> UTF8，則可看到顯示
##== (3) 修改本程式第4行，設定工作目錄為 本門課工作目錄
##== (4) 下載本門課所需之軟件包至本機備用 -- 下行安裝指令只需執行一次
install.packages( c("fpc","jiebaR","text2vec","data.table","stringr") )
#####===== (1C)用於練習講解與比較的 iris 數據 =====#####
##== 美國加州大學歐文分校的機械學習數據庫http://archive.ics.uci.edu/ml/datasets/Iris
dim(iris);   head(iris,2)
#####===== (1C)用於練習講解與比較的 iris 數據 =====#####
##== 美國加州大學歐文分校的機械學習數據庫http://archive.ics.uci.edu/ml/datasets/Iris
dim(iris) # 數據的筆數為150筆
head(iris,2) # 五個欄位(前四個單位為公分)：
#####===== (1D)鳶尾花類別以三種顏色作(Sepal.Length, Petal.Length)分布圖與聚類分布圖 =====#####
attach(iris)   ##== (1) 設定數據框為iris, 可以精簡以下的變量表示
##== (2)繪製鳶尾花類別分布圖
plot.iris <- function(xx,yy,xxlab,yylab) {
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
points(xx[Species=="setosa"],yy[Species=="setosa"],pch=1,col="blue")
points(xx[Species=="virginica"],yy[Species== "virginica"],pch=2,col="green")
points(xx[Species=="versicolor"],yy[Species== "versicolor"],pch=3,col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
plot.iris(Sepal.Length, Petal.Length, "Sepal.Length", "Petal.Length")
plot.iris(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length")
##== (2)繪製鳶尾花類別與聚類(iriscls)分布圖
plot.iris.cls <- function(xx,yy,xxlab,yylab,iriscls) {
xx = Petal.Width;   yy=Petal.Length;   xxlab="Petal.Width";  yylab="Petal.Length"
plot(NULL,xlim=range(xx),ylim=range(yy),main="classified scatter plot of iris data",xlab=xxlab,ylab=yylab)
text(xx[Species=="setosa"],yy[Species=="setosa"],iriscls[1:50],col="blue")
text(xx[Species=="virginica"],yy[Species== "virginica"],iriscls[51:100],col="green")
text(xx[Species=="versicolor"],yy[Species== "versicolor"],iriscls[101:150],col="purple")
legend("topleft",legend=c("setosa","virginica","versicolor"), bty="n",col=c("blue","green","purple"),x.intersp=0.5, y.intersp=0.5,pch=c(1,2,3))
}
plot.iris.cls(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length", as.integer(iris$Species))
#             (4)    更新簇的平均值(mean), 即重新計算每個簇中對象的平均值(原型)
#             (5) until k個平均值不再發生變化
##== 計算的複雜度(complexity): n--樣本個數,K--簇的個數,d--屬性個數, l--迭代次數
#    -- 空間複雜度: O((n+K)d)
#    -- 時間複雜度: O(nxKxlxd)
##== 三種選取初始質心的方法
#    -- (1) 隨機選取
#    -- (2) 以層次聚類做小樣本聚類，當做初始質心
#    -- (3) 隨機選第一個點，再選擇距離最遠的點當做下一個初始質心
##== 以iris數據進行實驗 [殷, 8.6.1]
set.seed(20)   #-- 隨機選取初始質心
kmeans.m = kmeans( iris[,1:4], centers=3  );   kmeans.m   #-- k-means 聚類模型
# [47] 2 2 2 2 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3
# [93] 3 3 3 3 3 3 3 3 1 3 1 1 1 1 3 1 1 1 1 1 1 3 3 1 1 1 1 3 1 3 1 3 1 1 3 3 1 1 1 1 1 3 1 1 1 1
# [139] 3 1 1 1 3 1 1 1 3 1 1 3
# Within cluster sum of squares by cluster:    ##== 簇內/簇間 變差計算
#   [1] 23.87947 15.15100 39.82097         #-- kmeans.m$withinss 簇內變差 E = sum(sum(dist(p,ci)))
# (between_SS / total_SS =  88.4 %)        #-- kmeans.m$betweenss=602.5192; kmeans.m$totss=681.3706
# Available components:
#   [1] "cluster"      "centers"      "totss"        "withinss"     "tot.withinss" "betweenss"
#   [7] "size"         "iter"         "ifault"
##== 聚類比較
plot.iris.cls(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length", kmeans.m$cluster)
##== 混淆矩陣(confusion matrix)
table( kmeans.m$cluster, as.integer(iris$Species) )
# 0.9901187 0.8622026
# Available components:
# [1] "medoids"    "id.med"     "clustering" "objective"  "isolation"  "clusinfo"
# [7] "silinfo"    "diss"       "call"       "data"
# $nc                  #-- pamk.result$pamobject$nc 聚類數
# [1] 2
# $crit
# [1] 0.0000000 0.6857882 0.5528190 0.4896972 0.4867481 0.4703951 0.3390116 0.3318516
# [9] 0.2918520 0.2918482
##== 聚類比較
plot.iris.cls(Petal.Width, Petal.Length, "Petal.Width", "Petal.Length", pamk.result$pamobject$clustering)
##== 混淆矩陣(confusion matrix)
table( pamk.result$pamobject$clustering, as.integer(iris$Species) )
#####===== (3B) 距離(distance) [殷,8.3] =====#####
##== (1) 向量化數據(vectorization)
head(iris[,1:4])
#   Sepal.Length Sepal.Width Petal.Length Petal.Width
# 1          5.1         3.5          1.4         0.2
# 2          4.9         3.0          1.4         0.2
# 3          4.7         3.2          1.3         0.2
# 4          4.6         3.1          1.5         0.2
# 5          5.0         3.6          1.4         0.2
# 6          5.4         3.9          1.7         0.4
##== (2) 距離的計算
iris[1,1:4] - iris[2,1:4]                 #-- 誤差 (Error) = 兩個點之間的差距
#####===== (3B) 距離(distance) [殷,8.3] =====#####
##== (1) 向量化數據(vectorization)
head(iris[,1:4])
#   Sepal.Length Sepal.Width Petal.Length Petal.Width
# 1          5.1         3.5          1.4         0.2
# 2          4.9         3.0          1.4         0.2
# 3          4.7         3.2          1.3         0.2
# 4          4.6         3.1          1.5         0.2
# 5          5.0         3.6          1.4         0.2
# 6          5.4         3.9          1.7         0.4
##== (2) 距離的計算
iris[1,1:4] - iris[2,1:4]                 #-- 誤差 (Error) = 兩個點之間的差距
#   Sepal.Length Sepal.Width Petal.Length Petal.Width
# 1          0.2         0.5            0           0
(iris[1,1:4] - iris[2,1:4])^2             #-- 平方誤差 (Squared Error)
#   Sepal.Length Sepal.Width Petal.Length Petal.Width
# 1         0.04        0.25            0           0
sum((iris[1,1:4] - iris[2,1:4])^2)        #-- [1] 0.29       #-- 平方誤差和 (MSE, Mean Squared Error)
sqrt(sum((iris[1,1:4] - iris[2,1:4])^2))  #-- [1] 0.5385165  #-- 根號平方誤差和 (RMSE, Rooted Mean Squared Error)
##== (3) 距離函數(dist())與距離矩陣
dist(iris[,1:4])[1:10]                    #-- 距離函數的計算結果
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/data/")
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
table(X$Year)
# 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993
#    9   46   36   17   14   14   21   16   15   17   16   41   43   60
# 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007
#  121  219  263  289  379  338  349  482  829  775  763  941 1008 1202
# 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2020  N/A
# 1428 1431 1259 1139  657  546  582  614  344    3    1  271
length(which(X$Year>=2010))   #-- [1] 5416
XX = X[which(X$Year>=2010),];   dim(XX)   #-- [1] 5416   11
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
XX.hc = hclust( dist( XX[,7:10] ) )
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
length(XX.group)   #-- [1] 5416
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  1  1  2  1  1  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  3  2  2  3  3  2  2  2  2  3  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
table(XX.group)
##== 試切成4類
XX.group = cutree(XX.hc, k=4);
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
XX.hc = hclust( dist( XX[,7:10] ) )
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("data/vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("data/vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("dataall/vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/")
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("dataall/vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
table(X$Year)
# 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993
#    9   46   36   17   14   14   21   16   15   17   16   41   43   60
# 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007
#  121  219  263  289  379  338  349  482  829  775  763  941 1008 1202
# 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2020  N/A
# 1428 1431 1259 1139  657  546  582  614  344    3    1  271
length(which(X$Year>=2010))   #-- [1] 5416
setwd("/Users/juck30808/Documents/Github/USC_R_Git/2.R-tech/dataall")
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("dataall/vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
table(X$Year)
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
table(X$Year)
# 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993
#    9   46   36   17   14   14   21   16   15   17   16   41   43   60
# 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007
#  121  219  263  289  379  338  349  482  829  775  763  941 1008 1202
# 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2020  N/A
# 1428 1431 1259 1139  657  546  582  614  344    3    1  271
length(which(X$Year>=2010))   #-- [1] 5416
XX = X[which(X$Year>=2010),];   dim(XX)   #-- [1] 5416   11
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
XX.hc = hclust( dist( XX[,7:10] ) )
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
length(XX.group)   #-- [1] 5416
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  1  1  2  1  1  2  2  2  1  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  3  2  2  3  3  2  2  2  2  3  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
table(XX.group)
##== 試切成4類
XX.group = cutree(XX.hc, k=4);
XX.group[1:50]
# 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
# 1  2  1  3  1  1  3  3  3  1  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
# 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
#  4  3  3  4  4  3  3  3  3  4  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
table(XX.group)
# 1    2    3    4
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
# 1    2    3    4
# 5    1   69 5341
#####===== (1) (KDD1) 讀取數據(-->X) =====#####
X = read.csv("vgsales.csv",fileEncoding="Big5");  dim(X);   head(X,2)   #-- [1] 16598    11
#####===== (2) (KDD2-3) 數據轉換(X-->XX) =====#####
table(X$Year)
# 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993
#    9   46   36   17   14   14   21   16   15   17   16   41   43   60
# 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007
#  121  219  263  289  379  338  349  482  829  775  763  941 1008 1202
# 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2020  N/A
# 1428 1431 1259 1139  657  546  582  614  344    3    1  271
length(which(X$Year>=2010))   #-- [1] 5416
XX = X[which(X$Year>=2010),];   dim(XX)   #-- [1] 5416   11
rownames(XX) = 1:dim(XX)[1]
#####===== (3) (KDD4) 數據模型(XX-->XX.group) =====#####
XX.hc = hclust( dist( XX[,7:10] ) )
##== 試切成3類
XX.group = cutree(XX.hc, k=3);
