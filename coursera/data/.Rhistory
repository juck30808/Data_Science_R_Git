custdata <- read.table('custdata.tsv',
header=TRUE,sep='\t')
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',
header=TRUE,sep='\t')
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type), 	# Note: 1
c("recent.move","num.vehicles")]) 	# Note: 2
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),  	# Note: 1
"missing",                    	# Note: 2
ifelse(custdata$is.employed==T, 	# Note: 3
"employed",
"not employed"))  	# Note: 4
summary(as.factor(custdata$is.employed.fix)) 	# Note: 5
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"missing",                       #如果is.employed 丟失，分配“ missing”。
ifelse(custdata$is.employed==T,"employed","not employed"))  	# 如果is.employed == TRUE
summary(as.factor(custdata$is.employed.fix)) 	# Note: 轉換已將變量類型從factor轉換為string。
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(custdata$Income)
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"missing",                       #如果is.employed 丟失，分配“ missing”。
ifelse(custdata$is.employed==T,"employed","not employed"))  	# 如果is.employed == TRUE
summary(as.factor(custdata$is.employed.fix)) 	# Note: 轉換已將變量類型從factor轉換為string。
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(custdata$Income)
# (informalexample 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
meanIncome <- mean(custdata$Income, na.rm=T) 	# Note: 1
Income.fix <- ifelse(is.na(custdata$Income),meanIncome,custdata$Income)
summary(Income.fix)
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"missing",                       #如果is.employed 丟失，分配“ missing”。
ifelse(custdata$is.employed==T,"employed","not employed"))  	# 如果is.employed == TRUE
summary(as.factor(custdata$is.employed.fix)) 	# Note: 轉換已將變量類型從factor轉換為string。
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(custdata$Income)
# (informalexample 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
meanIncome <- mean(custdata$Income, na.rm=T) 	# Note: 1
Income.fix <- ifelse(is.na(custdata$Income),meanIncome,custdata$Income)
summary(Income.fix)
#===================
# (example 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Converting missing numeric data to a level
breaks <-c(0, 10000, 50000, 100000, 250000, 1000000)           	# Note: 1
Income.groups <- cut(custdata$income, breaks=breaks, include.lowest=T)  	# Note: 2
summary(Income.groups)                                        	# Note: 3
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.csv',header=TRUE,sep='\t')
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"missing",                       #如果is.employed 丟失，分配“ missing”。
ifelse(custdata$is.employed==T,"employed","not employed"))  	# 如果is.employed == TRUE
summary(as.factor(custdata$is.employed.fix)) 	# Note: 轉換已將變量類型從factor轉換為string。
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(custdata$Income)
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"missing",                       #如果is.employed 丟失，分配“ missing”。
ifelse(custdata$is.employed==T,"employed","not employed"))  	# 如果is.employed == TRUE
summary(as.factor(custdata$is.employed.fix)) 	# Note: 轉換已將變量類型從factor轉換為string。
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),
"not in active workforce",
ifelse(custdata$is.employed==T,
"employed",
"not employed"))
summary(custdata$Income)
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(custdata$Income)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),
"not in active workforce",
ifelse(custdata$is.employed==T,
"employed",
"not employed"))
summary(as.factor(custdata$is.employed.fix))
# informalexample 4.1 of section 4.1.1
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(as.factor(custdata$is.employed.fix))
summary(custdata$Income)
# informalexample 4.1 of section 4.1.1
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(as.factor(custdata$is.employed.fix))
summary(custdata$Income)
# informalexample 4.1 of section 4.1.1
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(as.factor(custdata$is.employed.fix))
summary(custdata$Income)
# informalexample 4.1 of section 4.1.1
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(as.factor(custdata$is.employed.fix))
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(custdata$Income)
# (informalexample 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
meanIncome <- mean(custdata$Income, na.rm=T) 	# Note: 1
Income.fix <- ifelse(is.na(custdata$Income),meanIncome,custdata$Income)
summary(Income.fix)
# (informalexample 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
meanIncome <- mean(custdata$Income, na.rm=T) 	# Note: 1
Income.fix <- ifelse(is.na(custdata$Income),meanIncome,custdata$Income)
summary(Income.fix)
# (example 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Converting missing numeric data to a level
breaks <-c(0, 10000, 50000, 100000, 250000, 1000000)           	# Note: 1
Income.groups <- cut(custdata$income, breaks=breaks, include.lowest=T)  	# Note: 2
summary(Income.groups)                                        	# Note: 3
# (example 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Converting missing numeric data to a level
breaks <-c(0, 10000, 50000, 100000, 250000, 1000000)                    	# Note: 1
Income.groups <- cut(custdata$income, breaks=breaks, include.lowest=T)  	# Note: 2
summary(Income.groups)                                                  	# Note: 3
# example 4.1 of section 4.1.1
# (example 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Checking locations of missing data
setwd("/Users/juck30808/Documents/Github/USC_R_Git/3.Manning/data")
custdata <- read.table('custdata.tsv',header=TRUE,sep='\t')
summary(custdata[is.na(custdata$housing.type),       	# Note: 1  where housing.type is NA.
c("recent.move","num.vehicles")]) 	# Note: 2  Look only at the columns
# (example 4.2 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Remapping NA to a level
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"missing",                       #如果is.employed 丟失，分配“ missing”。
ifelse(custdata$is.employed==T,"employed","not employed"))  	# 如果is.employed == TRUE
summary(as.factor(custdata$is.employed.fix)) 	# Note: 轉換已將變量類型從factor轉換為string。
# informalexample 4.1 of section 4.1.1
# (informalexample 4.1 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
custdata$is.employed.fix <- ifelse(is.na(custdata$is.employed),"not in active workforce",
ifelse(custdata$is.employed==T,"employed","not employed"))
summary(as.factor(custdata$is.employed.fix))
# (example 4.3 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Converting missing numeric data to a level
breaks <-c(0, 10000, 50000, 100000, 250000, 1000000)                    	# Note: 1
Income.groups <- cut(custdata$income, breaks=breaks, include.lowest=T)  	# Note: 2
summary(Income.groups)                                                  	# Note: 3
Income.groups <- as.character(Income.groups)                   	# Note: 4
source('~/Documents/Github/USC_R_Git/3.Manning/c04_Managing_data.R', echo=TRUE)
Income.groups <- as.character(Income.groups)                   	# Note: 4
Income.groups <- ifelse(is.na(Income.groups),"no income", Income.groups) # Note: 5
Income.groups <- as.character(Income.groups)                            	# Note: 4
Income.groups <- ifelse(is.na(Income.groups),"no income", Income.groups) # Note: 5
summary(as.factor(Income.groups))
# (example 4.4 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Tracking original NAs with an extra categorical variable
missingIncome <- is.na(custdata$Income)  	# Note: 1
Income.fix <- ifelse(is.na(custdata$Income), 0, custdata$Income) 	# Note: 2
missingIncome
# (example 4.4 of section 4.1.1)  : Managing data : Cleaning data : Treating missing values (NAs)
# Title: Tracking original NAs with an extra categorical variable
missingIncome <- is.na(custdata$Income)  	# Note: 1 可以區分數據中的兩種零：即將添加的零和已經存在的零。
missingIncome
Income.fix <- ifelse(is.na(custdata$Income), 0, custdata$Income) 	# Note: 2 Replace the NAs with zeros.
Income.fix
summary(Income.fix)
# (example 4.5 of section 4.1.2)  : Managing data : Cleaning data : Data transformations
# Title: Normalizing income by state
medianincome <- aggregate(income~state.of.res,custdata,FUN=median)
colnames(medianincome) <- c('State','Median.Income')
summary(medianincome)  	# Note: 1
